{"remainingRequest":"C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\babel-loader\\lib\\index.js!C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Java\\Java-Code\\healthy\\vue-healthy\\src\\views\\sport\\food\\Food.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Java\\Java-Code\\healthy\\vue-healthy\\src\\views\\sport\\food\\Food.vue","mtime":1625906795120},{"path":"C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Java\\Java-Code\\healthy\\vue-healthy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}