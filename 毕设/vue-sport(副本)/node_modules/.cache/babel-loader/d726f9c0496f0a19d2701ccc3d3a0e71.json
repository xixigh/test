{"remainingRequest":"D:\\Java-code\\healthy\\vue-healthy\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Java-code\\healthy\\vue-healthy\\node_modules\\babel-loader\\lib\\index.js!D:\\Java-code\\healthy\\vue-healthy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Java-code\\healthy\\vue-healthy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Java-code\\healthy\\vue-healthy\\src\\views\\admin\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Java-code\\healthy\\vue-healthy\\src\\views\\admin\\User.vue","mtime":1620186479581},{"path":"D:\\Java-code\\healthy\\vue-healthy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Java-code\\healthy\\vue-healthy\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Java-code\\healthy\\vue-healthy\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Java-code\\healthy\\vue-healthy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Java-code\\healthy\\vue-healthy\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}